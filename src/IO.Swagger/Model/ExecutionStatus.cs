/* 
 * Lending Club API
 *
 * Lending Club API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines ExecutionStatus
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ExecutionStatus
    {
        
        /// <summary>
        /// Enum ORDERFULFILLED for "ORDER_FULFILLED"
        /// </summary>
        [EnumMember(Value = "ORDER_FULFILLED")]
        ORDERFULFILLED = 1,
        
        /// <summary>
        /// Enum LOANAMNTEXCEEDED for "LOAN_AMNT_EXCEEDED"
        /// </summary>
        [EnumMember(Value = "LOAN_AMNT_EXCEEDED")]
        LOANAMNTEXCEEDED = 2,
        
        /// <summary>
        /// Enum NOTANINFUNDINGLOAN for "NOT_AN_INFUNDING_LOAN"
        /// </summary>
        [EnumMember(Value = "NOT_AN_INFUNDING_LOAN")]
        NOTANINFUNDINGLOAN = 3,
        
        /// <summary>
        /// Enum REQUESTEDAMNTLOW for "REQUESTED_AMNT_LOW"
        /// </summary>
        [EnumMember(Value = "REQUESTED_AMNT_LOW")]
        REQUESTEDAMNTLOW = 4,
        
        /// <summary>
        /// Enum REQUESTEDAMNTROUNDED for "REQUESTED_AMNT_ROUNDED"
        /// </summary>
        [EnumMember(Value = "REQUESTED_AMNT_ROUNDED")]
        REQUESTEDAMNTROUNDED = 5,
        
        /// <summary>
        /// Enum AUGMENTEDBYMERGE for "AUGMENTED_BY_MERGE"
        /// </summary>
        [EnumMember(Value = "AUGMENTED_BY_MERGE")]
        AUGMENTEDBYMERGE = 6,
        
        /// <summary>
        /// Enum ELIMBYMERGE for "ELIM_BY_MERGE"
        /// </summary>
        [EnumMember(Value = "ELIM_BY_MERGE")]
        ELIMBYMERGE = 7,
        
        /// <summary>
        /// Enum INSUFFICIENTCASH for "INSUFFICIENT_CASH"
        /// </summary>
        [EnumMember(Value = "INSUFFICIENT_CASH")]
        INSUFFICIENTCASH = 8,
        
        /// <summary>
        /// Enum NOTANINVESTOR for "NOT_AN_INVESTOR"
        /// </summary>
        [EnumMember(Value = "NOT_AN_INVESTOR")]
        NOTANINVESTOR = 9,
        
        /// <summary>
        /// Enum NOTAVALIDINVESTMENT for "NOT_A_VALID_INVESTMENT"
        /// </summary>
        [EnumMember(Value = "NOT_A_VALID_INVESTMENT")]
        NOTAVALIDINVESTMENT = 10,
        
        /// <summary>
        /// Enum NOTEADDEDTOPORTFOLIO for "NOTE_ADDED_TO_PORTFOLIO"
        /// </summary>
        [EnumMember(Value = "NOTE_ADDED_TO_PORTFOLIO")]
        NOTEADDEDTOPORTFOLIO = 11,
        
        /// <summary>
        /// Enum NOTAVALIDPORTFOLIO for "NOT_A_VALID_PORTFOLIO"
        /// </summary>
        [EnumMember(Value = "NOT_A_VALID_PORTFOLIO")]
        NOTAVALIDPORTFOLIO = 12,
        
        /// <summary>
        /// Enum ERRORADDINGNOTETOPORTFOLIO for "ERROR_ADDING_NOTE_TO_PORTFOLIO"
        /// </summary>
        [EnumMember(Value = "ERROR_ADDING_NOTE_TO_PORTFOLIO")]
        ERRORADDINGNOTETOPORTFOLIO = 13,
        
        /// <summary>
        /// Enum SYSTEMBUSY for "SYSTEM_BUSY"
        /// </summary>
        [EnumMember(Value = "SYSTEM_BUSY")]
        SYSTEMBUSY = 14,
        
        /// <summary>
        /// Enum UNKNOWNERROR for "UNKNOWN_ERROR"
        /// </summary>
        [EnumMember(Value = "UNKNOWN_ERROR")]
        UNKNOWNERROR = 15
    }

}
